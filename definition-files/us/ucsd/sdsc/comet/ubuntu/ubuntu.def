Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu
    APPLICATION_NAME none
    APPLICATION_VERSION none
    APPLICATION_URL none
    SYSTEM_NAME comet
    SYSTEM_SINGULARITY_VERSION 2.3.2
    SYSTEM_URL http://www.sdsc.edu/support/user_guides/comet.html
    LAST_UPDATED 20180226

%setup

%environment

%post -c /bin/bash

    export LC_ALL=C

    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install libtool
    apt-get -y install pkg-config
    apt-get -y install gfortran
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Build and install additional software packages in /opt
    cd /opt

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh

    echo '#!/usr/bin/expect -f' > install-miniconda2.exp
    echo 'spawn ./Miniconda2-latest-Linux-x86_64.sh' >> install-miniconda2.exp
    echo 'expect "Please, press ENTER to continue\r' >> install-miniconda2.exp
    echo '>>> "' >> install-miniconda2.exp
    echo 'send "\r   "' >> install-miniconda2.exp
    echo 'expect "Do you accept the license terms? \[yes|no\]\r' >> install-miniconda2.exp
    echo '\[no\] >>> "' >> install-miniconda2.exp
    echo 'send "yes\r"' >> install-miniconda2.exp
    echo 'expect "Miniconda2 will now be installed into this location:\r' >> install-miniconda2.exp
    echo '/root/miniconda2\r' >> install-miniconda2.exp
    echo '\r' >> install-miniconda2.exp
    echo '  - Press ENTER to confirm the location\r' >> install-miniconda2.exp
    echo '  - Press CTRL-C to abort the installation\r' >> install-miniconda2.exp
    echo '  - Or specify a different location below\r' >> install-miniconda2.exp
    echo '\r' >> install-miniconda2.exp
    echo '\[/root/miniconda2\] >>> "' >> install-miniconda2.exp
    echo 'send "/opt/miniconda2\r"' >> install-miniconda2.exp
    echo 'expect "Do you wish the installer to prepend the Miniconda2 install location\r' >> install-miniconda2.exp
    echo 'to PATH in your /root/.bashrc ? \[yes|no\]\r' >> install-miniconda2.exp
    echo '\[no\] >>> "' >> install-miniconda2.exp
    echo 'send "no\r"' >> install-miniconda2.exp
    echo 'expect "Thank you for installing Miniconda2!\r"' >> install-miniconda2.exp

    chmod +x install-miniconda2.exp
    ./install-miniconda2.exp

    rm Miniconda2-latest-Linux-x86_64.sh
    rm install-miniconda2.exp

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    
    echo '#!/usr/bin/expect -f' > install-miniconda3.exp
    echo 'spawn ./Miniconda3-latest-Linux-x86_64.sh' >> install-miniconda3.exp
    echo 'expect "Please, press ENTER to continue\r' >> install-miniconda3.exp
    echo '>>> "' >> install-miniconda3.exp
    echo 'send "\r   "' >> install-miniconda3.exp
    echo 'expect "Do you accept the license terms? \[yes|no\]\r' >> install-miniconda3.exp
    echo '\[no\] >>> "' >> install-miniconda3.exp
    echo 'send "yes\r"' >> install-miniconda3.exp
    echo 'expect "Miniconda3 will now be installed into this location:\r' >> install-miniconda3.exp
    echo '/root/miniconda3\r' >> install-miniconda3.exp
    echo '\r' >> install-miniconda3.exp
    echo '  - Press ENTER to confirm the location\r' >> install-miniconda3.exp
    echo '  - Press CTRL-C to abort the installation\r' >> install-miniconda3.exp
    echo '  - Or specify a different location below\r' >> install-miniconda3.exp
    echo '\r' >> install-miniconda3.exp
    echo '\[/root/miniconda3\] >>> "' >> install-miniconda3.exp
    echo 'send "/opt/miniconda3\r"' >> install-miniconda3.exp
    echo 'expect "Do you wish the installer to prepend the Miniconda3 install location\r' >> install-miniconda3.exp
    echo 'to PATH in your /root/.bashrc ? \[yes|no\]\r' >> install-miniconda3.exp
    echo '\[no\] >>> "' >> install-miniconda3.exp
    echo 'send "no\r"' >> install-miniconda3.exp
    echo 'expect "Thank you for installing Miniconda2!\r"' >> install-miniconda3.exp

    chmod +x install-miniconda3.exp
    ./install-miniconda3.exp

    rm Miniconda3-latest-Linux-x86_64.sh
    rm install-miniconda3.exp

    # Update database for mlocate
    updatedb 

%files

%runscript

%test
