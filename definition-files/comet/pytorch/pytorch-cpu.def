Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    APPLICATION_NAME pytorch
    APPLICATION_VERSION 1.2.0
    APPLICATION_URL http://pytorch.org/

    SYSTEM_NAME comet
    SYSTEM_SINGULARITY_VERSION 2.6.1
    SYSTEM_URL http://www.sdsc.edu/support/user_guides/comet.html

    SINGULARITY_IMAGE_SIZE 16384

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20191015

%setup

%environment

    # Set system locale
    export LC_ALL=C

    # Set paths to OpenMPI binaries and libraries
    export PATH="/opt/openmpi-1.8.4/bin:${PATH}"
    export LD_LIBRARY_PATH="/opt/openmpi-1.8.4/lib:${LD_LIBRARY_PATH}"

    # Set default miniconda environment
    export PATH="/opt/miniconda3/bin:${PATH}"

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install libtool
    apt-get -y install pkg-config
    apt-get -y install wget
    apt-get -y install gfortran
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh
    ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Install basic drivers for user space access to Ethernet, RDMA,
    # and Infiniband. See https://community.mellanox.com/docs/DOC-2431
    apt-get -y install dkms
    apt-get -y install infiniband-diags
    apt-get -y install libibverbs-dev
    apt-get -y install ibacm
    apt-get -y install librdmacm-dev
    apt-get -y install libmlx4-dev
    apt-get -y install libmlx5-dev
    apt-get -y install mstflint
    apt-get -y install libibcm-dev
    apt-get -y install libibmad-dev
    apt-get -y install libibumad-dev
    apt-get -y install opensm
    apt-get -y install srptools

    # Install additional tools
    apt-get -y install ibutils
    apt-get -y install ibverbs-utils
    apt-get -y install rdmacm-utils
    apt-get -y install perftest
    apt-get -y install numactl
    apt-get -y install libnuma-dev

    # Install libnl
    apt-get -y install libnl-3-200
    apt-get -y install libnl-route-3-200
    apt-get -y install libnl-route-3-dev
    apt-get -y install libnl-utils

    # Install OpenMPI dependencies
    apt-get -y install zlib1g-dev

    # Download, build, and install OpenMPI
    wget https://www.open-mpi.org/software/ompi/v1.8/downloads/openmpi-1.8.4.tar.gz
    tar -xzvf openmpi-1.8.4.tar.gz
    cd openmpi-1.8.4
    ./configure --prefix=/opt/openmpi-1.8.4
     make all install

    # Set paths to OpenMPI binaries and libraries
    export PATH="/opt/openmpi-1.8.4/bin:${PATH}"
    export LD_LIBRARY_PATH="/opt/openmpi-1.8.4/lib:${LD_LIBRARY_PATH}"

    # Install PyTorch dependencies for python(2)
    export PATH="/opt/miniconda2/bin:${PATH}"
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
    conda install -y numpy
    conda install -y ninja
    conda install -y pyyaml
    conda install -y mkl
    conda install -y mkl-include
    conda install -y setuptools
    conda install -y cmake
    conda install -y cffi
    conda install -y typing
    conda install -y mkldnn -c mingfeima
    conda install -y future

    # Install common python packages for data science and machine
    # learning applications
    conda install -y pandas
    conda install -y matplotlib
    conda install -y ipython
    conda install -y jupyter
    conda install -y sympy
    conda install -y nose
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y nltk
    conda install -y statsmodels
    conda install -y opencv

    cd /opt

    # Download, build, and install PyTorch for python(2)
    export CC='mpicc'
    export CXX='mpicxx'
    export CFLAGS='-march=haswell -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp -mfma -mno-fma4 -mno-xop -mbmi -mbmi2 -mno-tbm -mavx -mavx2 -msse4.2 -msse4.1 -mlzcnt -mno-rtm -mno-hle -mrdrnd -mf16c -mfsgsbase -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mxsave -mxsaveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mtune=haswell'
    export USE_OPENMP=1
    export USE_NNPACK=1
    export USE_QNNPACK=1
    export USE_MKLDNN=1
    export USE_DISTRIBUTED=1
    export USE_GLOO=1
    export USE_GLOO_IBVERBS=1
    export USE_IBVERBS=1
    export USE_MPI=1
    export USE_C10D_MPI=1
    export USE_CUDA=0
    export USE_CUDNN=0
    export USE_NCCL=0
    export USE_OPENCV=1
    export USE_FBGEMM=0
    export TORCH_CUDA_ARCH_LIST="NONE"
    git clone --recursive https://github.com/pytorch/pytorch
    cd /opt/pytorch
    git checkout v1.2.0
    git submodule sync
    git submodule update --init
    python setup.py install

    # Download and install PyTorch Vision package for python(2)
    git clone https://github.com/pytorch/vision.git
    cd /opt/pytorch/vision
    git checkout v0.3.0
    python setup.py install

    # Install PyTorch dependencies for python3
    export PATH="/opt/miniconda3/bin:${PATH}"
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
    conda install -y numpy
    conda install -y ninja
    conda install -y pyyaml
    conda install -y mkl
    conda install -y mkl-include
    conda install -y setuptools
    conda install -y cmake
    conda install -y cffi
    conda install -y typing
    conda install -y mkldnn -c mingfeima
    conda install -y future

    # Install common python3 packages for data science and machine
    # learning applications
    conda install -y pandas
    conda install -y matplotlib
    conda install -y ipython
    conda install -y jupyter
    conda install -y sympy
    conda install -y nose
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y nltk
    conda install -y statsmodels
    conda install -y opencv

    # Download, build, and install PyTorch for python3
    cd /opt/pytorch
    python setup.py clean --all
    python setup.py install

    # Download and install PyTorch Vision package for python3
    cd /opt/pytorch/vision
    python setup.py clean --all
    python setup.py install

    # Download the PyTorch examples repository
    cd /opt/pytorch
    git clone https://github.com/pytorch/examples.git

    # Update database for mlocate
    updatedb

%files

%runscript

    echo "                                                "
    echo "      __________________  __  _______________   "
    echo "    -----/ ____/ __ \/  |/  / ____/_  __/       "
    echo "      --/ /   / / / / /|_/ / __/   / /          "
    echo "       / /___/ /_/ / /  / / /___  / /           "
    echo "       \____/\____/_/  /_/_____/ /_/            "
    echo "                                                "

%test
