Bootstrap: shub
From: mkandes/naked-singularity:ubuntu-18.04-cuda-11.2-openmpi-4.0.5

%labels

    APPLICATION_NAME pytorch
    APPLICATION_VERSION 1.8.1
    APPLICATION_URL https://pytorch.org

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20210608

%setup

%environment

    # Set default miniconda environment
    export PATH="/opt/miniconda3/bin:${PATH}"

%post -c /bin/bash

    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='bionic'

    # Set system locale
    export LC_ALL='C'

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Set CUDA version
    export CUDA_MAJOR='11'
    export CUDA_MINOR='2'
    export CUDA_VERSION="${CUDA_MAJOR}.${CUDA_MINOR}"

    # Set paths to CUDA binaries and libraries
    export CUDA_HOME="/usr/local/cuda-${CUDA_VERSION}"
    export PATH="${CUDA_HOME}/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="${CUDA_HOME}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"

    # Set Mellanox OFED version, operating system, and hardware platform
    export MLNX_ROOT_URL='http://www.mellanox.com/downloads/ofed'
    export MLNX_OFED_VERSION='4.7-3.2.9.0'
    export MLNX_OS_VERSION='ubuntu18.04'
    export MLNX_PLATFORM='x86_64'

    # Set OpenMPI major, minor, and revision numbers, root and
    # installation directories
    export OMPI_ROOT_URL='https://download.open-mpi.org/release/open-mpi'
    export OMPI_MAJOR='4'
    export OMPI_MINOR='0'
    export OMPI_REVISION='5'
    export OMPI_VERSION="${OMPI_MAJOR}.${OMPI_MINOR}.${OMPI_REVISION}"
    export OMPI_ROOT_DIR='/opt/openmpi'
    export OMPI_INSTALL_DIR="${OMPI_ROOT_DIR}/${OMPI_VERSION}"

    # Set paths to OpenMPI binaries and libraries
    export PATH="${OMPI_INSTALL_DIR}/bin:${PATH}"
    export LD_LIBRARY_PATH="${OMPI_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Setup conda environment
    export PATH="/opt/miniconda3/bin:${PATH}"
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}

    # Install common python packages 
    conda install -y jupyterlab
    conda install -y numpy
    conda install -y matplotlib
    conda install -y pandas
    conda install -y plotly
    conda install -y scipy
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y seaborn
    conda install -y statsmodels
    conda install -y opencv

    # Install GPU-accelerated python packages
    conda install -y numba

    # Install additional python packages
    conda install -y astropy
    conda install -y biopython
    conda install -y h5py
    conda install -y nltk
    conda install -y sympy
    conda install -y netcdf4

    # Install PyTorch dependencies 
    # https://github.com/pytorch/pytorch#install-dependencies
    conda install -y astunparse
    conda install -y numpy
    conda install -y ninja
    conda install -y pyyaml
    conda install -y mkl
    conda install -y mkl-include
    conda install -y setuptools
    conda install -y cmake
    conda install -y cffi
    conda install -y typing_extensions
    conda install -y future
    conda install -y six
    conda install -y requests
    conda install -y dataclasses

    conda install -y spacy

    # Add LAPACK support for the GPU
    conda install -y magma-cuda112 -c pytorch

    cd /opt

    # Download, build, and install PyTorch
    git clone --recursive https://github.com/pytorch/pytorch
    mv pytorch pytorch-1.8.1
    cd pytorch-1.8.1
    git checkout v1.8.1
    git submodule sync
    git submodule update --init --recursive

    export CC='mpicc'
    export CXX='mpicxx'
    export CFLAGS='-mtune=generic'

    export BLAS='MKL'
    export USE_FBGEMM=1
    export USE_MKLDNN=1
    export USE_NNPACK=1
    export USE_NUMPY=1
    export USE_QNNPACK=1

    export USE_DISTRIBUTED=1
    export USE_IBVERBS=1
    export USE_GLOO=1
    export USE_MPI=1
    export USE_C10D_MPI=1
    export USE_NCCL=1
    export USE_SYSTEM_NCCL=1
    #sed -i '77,80 s/^/#/' cmake/Modules/FindNCCL.cmake

    export USE_OPENMP=1
    export ATEN_THREADING='OMP'
    export MKL_THREADING='OMP'

    #export TORCH_CUDA_ARCH_LIST='3.5;3.7;5.2;6.0;6.1;7.0;7.5;8.0;8.6'
    export TORCH_CUDA_ARCH_LIST='3.7;6.0;7.0'
    export USE_CUDA=1
    export USE_CUDNN=1

    export USE_FFMPEG=0
    export USE_OPENCV=1

    python setup.py install

    # Download and install vision package for PyTorch
    git clone https://github.com/pytorch/vision.git
    cd vision
    git checkout v0.9.1
    python setup.py install

    cd ../

    # Download and install text package for PyTorch
    git clone https://github.com/pytorch/text.git
    cd text
    git checkout v0.9.1-rc1
    git submodule update --init --recursive
    python setup.py clean install

    cd ../

    # Download and install audio package for PyTorch
    git clone https://github.com/pytorch/audio.git
    cd audio
    git checkout v0.8.1
    git submodule update --init --recursive
    BUILD_SOX=1 python setup.py clean install

    cd ../

    # Download examples for PyTorch
    git clone https://github.com/pytorch/examples.git

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

%files

%runscript

%test
